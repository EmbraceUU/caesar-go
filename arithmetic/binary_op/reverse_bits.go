package binary_op

// ReverseBits 颠倒给定的 32 位无符号整数的二进制位。
// 输入：n = 00000010100101000001111010011100
// 输出：964176192 (00111001011110000010100101000000)
// 解释：输入的二进制串 00000010100101000001111010011100 表示无符号整数 43261596，
//      因此返回 964176192，其二进制表示形式为 00111001011110000010100101000000。
// https://leetcode-cn.com/problems/reverse-bits/
func ReverseBits(num uint32) uint32 {
	if num == 0 {
		return num
	}

	var rb uint32
	// 遍历uint32
	for i := 0; i < 32; i++ {

		// 现将num右移，和1做与运算，得出当前位置的数值
		// 将得到的数值左移(32-i-1)位
		// 通过或运算将新的数值在rb上还原
		rb |= ((num >> i) & 1) << (32 - i - 1)
	}
	return rb
}
